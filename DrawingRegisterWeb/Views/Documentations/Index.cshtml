@model DrawingRegisterWeb.ViewModels.DocumentationVM

@{
	ViewData["Title"] = "Documentations";
}

<h1 class="text-primary">Documentation list</h1>

<div class="alert alert-dismissible alert-info mt-3">
  <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  The best practice is to create or upload new Documentation directly from the <a  asp-controller="Projects" asp-action="Index">Project</a>. 
  This way ensures that the project and the documentation are always connected.
</div>

<form asp-controller="Documentations" asp-action="Index" method="get" class="d-flex mt-3">
		<select asp-for="Projects" asp-items="Model.ProjectSelectList" class="form-select me-sm-2">
			<option value="">All</option>
		</select>

		<input asp-for="Search" type="text" class="form-control me-sm-2" placeholder="Search">
		<button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
</form>

<table class="table table-striped mt-3" id="sortTable" style="vertical-align: middle">
	<thead>
		<tr class="user-select-none">
			<th onclick="sortTable(0)">
				@Html.DisplayNameFor(model => model.Documentations![0].FileName)
				<i class="sortIcon bi"></i>
			</th>
			<th onclick="sortTable(1)">
				@Html.DisplayNameFor(model => model.Documentations![0].FileType)
				<i class="sortIcon bi"></i>
			</th>
			<th onclick="sortTable(2)">
				@Html.DisplayNameFor(model => model.Documentations![0].Project)
				<i class="sortIcon bi"></i>
			</th>
			<th onclick="sortTable(3)">
				@Html.DisplayNameFor(model => model.Documentations![0].CreateDate)
				<i class="sortIcon bi"></i>
			</th>
			<th onclick="sortTable(4)">
				@Html.DisplayNameFor(model => model.Documentations![0].Revision)
				<i class="sortIcon bi"></i>
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
	@foreach (var item in Model.Documentations!) {
		int docFileUrlendIndex = item.FileUrl.LastIndexOf(".");
		string docThumbanilUrl = item.FileUrl.Substring(0, docFileUrlendIndex);
		docThumbanilUrl += ".jpg";

		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.FileName)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.FileType)
			</td>
			<td>
				@item.Project.ProjectNubmer @item.Project.Name
			</td>
			<td>
				@item.CreateDate.ToString("yyyy/MM/dd")
			</td>
			<td>
				@item.Revision
			</td>
			<td>
				<div class="btn btn-group">							
					@if (item.FileType == "pdf")
					{
						<a	href="@item.FileUrl"
						target="_blank"
						class="btn btn-outline-primary btn-lg p-0 overflow-hidden"
						data-bs-toggle="tooltip" 
						data-bs-placement="bottom" 
						data-bs-original-title="Open" 
						aria-describedby="tooltip716761"> 
							<img src="@docThumbanilUrl" alt="Thumbanil" width="48" height="48" style="vertical-align:middle"/>
						</a>
					}
					<a	href="@item.FileUrl"
					class="btn btn-outline-primary btn-lg"
					data-bs-toggle="tooltip" 
					data-bs-placement="bottom" 
					data-bs-original-title="Download" 
					aria-describedby="tooltip716761"
					download="@item.FileName.@item.FileType"> 
							<i class="bi bi-cloud-download"></i>
					</a>
					<a asp-controller="Documentations" asp-action="Edit" asp-route-id="@item.Id"
					class="btn btn-outline-primary btn-lg"
					data-bs-toggle="tooltip" 
					data-bs-placement="bottom" 
					data-bs-original-title="Edit" 
					aria-describedby="tooltip716761"> 
							<i class="bi bi-pencil-square"></i>
					</a>
					<a asp-controller="Documentations" asp-action="Delete" asp-route-id="@item.Id"
					class="btn btn-outline-danger btn-lg"
					data-bs-toggle="tooltip" 
					data-bs-placement="bottom" 
					data-bs-original-title="Delete" 
					aria-describedby="tooltip716761"> 
						<i class="bi bi-trash"></i>
					</a>
				</div>
			</td>
		</tr>
	}
	</tbody>
</table>
