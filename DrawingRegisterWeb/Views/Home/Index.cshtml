@{
	ViewData["Title"] = "Home Page";
}

<h1 class="lead text-center">Practice project for ASP.NET Core (Model-View-Controller) with C# and Razor Pages.</h1>

<h2 class="text-center text-primary mt-5">What is Drawing Register?</h2>

<div class="row mt-1">
	<div class="col-lg-6 p-3">
		<div class="cardHome card-1 h-100" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasCard1" aria-controls="offcanvasCard1">
			<h3>Drawing Register</h3>
			<p>Web based software to store, manage, change electronic drawing and documentation files</p>
		</div>
	</div>
	<div class="col-lg-6 p-3">
		<div class="cardHome card-2 h-100" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasCard2" aria-controls="offcanvasCard2">
			<h3>App Workflow</h3>
			<p>Manage Files by Register, States, Projects, Drawings, Documents and Layouts</p>
		</div>
	</div>
</div>

<h3 class="text-center text-primary mt-5">ASP.NET core MVC learning curve</h3>

<div id="marginForHomeIntroduction" class="row mt-1">
	<div class="col-lg-6 p-3">
		<div class="cardHome card-4 h-100" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasCard4" aria-controls="offcanvasCard4">
			<h3>Application</h3>
			<p>README and Source Code</p>
		</div>
	</div>
	<div class="col-lg-6 p-3">
		<div class="cardHome card-5 h-100" onclick="sqlDiagram()">
			<h3>Database</h3>
			<p>SQL Diagram</p>
		</div>
	</div>
</div>

<img id="HomeIntroduction" src="~/Assets/Solutions_automation.svg" loading="lazy"/>

<!-- Off Canvas -->

<div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasCard1" aria-labelledby="offcanvasCard1Label">
	<div class="offcanvas-header">
		<h5 class="offcanvas-title text-primary" id="offcanvasCard1Label">Drawing Register</h5>
		<button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
	</div>
	<div class="offcanvas-body">
		<div>
			<p>
				&emsp;A drawing register is a controlled list of drawings that also provides a standardised way of tracking the 
				addition of revisions and changes to an existing document. The list usually includes information such as 
				drawing number, title, revision, author and date.
			</p>
		</div>
		<div class="card mt-3">
			<div class="card-body">
				<h4 class="card-title text-primary">Upload Your Files</h4>
				<h6 class="card-subtitle mb-2 text-muted">Upload and download Drawings, Documents, Layouts</h6>
				<img class="img-thumbnail" src="~/Assets/Upload-your-files.svg"/>
				<p class="card-text">&emsp;Easy way to upload all your drawings and documents into the already constructed template. 
					All drawings will have its own project and master drawing set. Quick to examine the PDF file thanks to automatically generated thumbnails.</p>
			</div>
		</div>
		<div class="card mt-3">
			<div class="card-body">
				<h4 class="card-title text-primary">Share files securely</h4>
				<h6 class="card-subtitle mb-2 text-muted">Control who and when access or modify your files</h6>
				<img class="img-thumbnail" src="~/Assets/Transferring-files-securely.svg"/>
				<p class="card-text">&emsp;From the manager, you can control who can access your drawing register. Without your permission, 
					no one else can get to your files. The project states specifies the control when drawings can be edited, and when they are locked only for review.</p>
			</div>
		</div>
		<div class="card mt-3">
			<div class="card-body">
				<h4 class="card-title text-primary">Responsive user interface</h4>
				<h6 class="card-subtitle mb-2 text-muted">Share files in various ways</h6>
				<img class="img-thumbnail" src="~/Assets/Share-files-in-various-ways.svg"/>
				<p class="card-text">&emsp;Access your Drawing Register from everywhere. Thanks to a reactive user interface, you can easily review your 
					drawings and documents from a phone, tablet or laptop.</p>
			</div>
		</div>
	</div>
</div>

<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasCard2" aria-labelledby="offcanvasCard2Label">
	<div class="offcanvas-header">
		<h5 class="offcanvas-title text-primary" id="offcanvasCard2Label">App Workflow</h5>
		<button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
	</div>
	<div class="offcanvas-body">
		<div>
			<h4 class="text-primary text-center">Manager</h4>
			<p>
				&emsp;In Manager, you can create your own Drawing Register and send or receive invites. To receive your 
				invite or send you a request, the user must create an account on the app. Once the invite/request is approved, 
				that's it! The user is on your staff! Only now they have access to your drawings.
			</p>
			<img class="img-thumbnail" src="~/Assets/Register-Users.svg"/>

			<h4 class="text-primary text-center mt-3">Project States</h4>
			<p>
				&emsp;You can control how accessible the project is for team members. Each project state will 
				have different functions to create, read, update and delete drawings, documentation and layouts.
			</p>

			<div class="accordion" id="accordionExample">
				<div class="accordion-item">
					<h5 class="accordion-header" id="headingOne">
						<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
						<p class="text-info fw-bold">Defined</p>
						</button>
					</h5>
					<div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample" style="">
						<div class="accordion-body">
							&emsp;The project has been created but the plan has not yet been initiated and team members have no access to the project.
						</div>
					</div>
				</div>
				<div class="accordion-item">
					<h5 class="accordion-header" id="heading2">
						<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse2" aria-expanded="false" aria-controls="collapse2">
						<p class="text-primary fw-bold">Running</p>
						</button>
					</h5>
					<div id="collapse2" class="accordion-collapse collapse" aria-labelledby="heading2" data-bs-parent="#accordionExample" style="">
						<div class="accordion-body">
							&emsp;The project has been started and is accessible by team members. Team members can create, read, update and delete drawings, documentation and layouts.
						</div>
					</div>
				</div>
				<div class="accordion-item">
					<h5 class="accordion-header" id="heading3">
						<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse3" aria-expanded="false" aria-controls="collapse3">
						<p class="text-danger fw-bold">Canceled</p>
						</button>
					</h5>
					<div id="collapse3" class="accordion-collapse collapse" aria-labelledby="heading3" data-bs-parent="#accordionExample" style="">
						<div class="accordion-body">
							&emsp;The project has been canceled, but project data is still available to team members. Team members can only read drawings, documentation and layouts.
						</div>
					</div>
				</div>
				<div class="accordion-item">
					<h5 class="accordion-header" id="heading4">
						<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse4" aria-expanded="false" aria-controls="collapse4">
						<p class="text-success fw-bold">Completed</p>
						</button>
					</h5>
					<div id="collapse4" class="accordion-collapse collapse" aria-labelledby="heading4" data-bs-parent="#accordionExample" style="">
						<div class="accordion-body">
							&emsp;The project set to Completed. Team members can only read drawings, documentation and layouts.
						</div>
					</div>
				</div>
			</div>

			<h4 class="text-primary text-center mt-3">Project</h4>
			<p>
				&emsp;The project groups drawings, documents and layouts into one unit. It helps organise the company's documentation and monitor progress.
			</p>
			<img class="img-thumbnail" src="~/Assets/Project.svg"/>

			<h4 class="text-primary text-center mt-3">Drawing and Drawing Files</h4>
			<p>
				&emsp;The drawing catalogue named after the main assembly is a common practice in engineering to arrange drawing files. It is nearly impossible 
				to track changes and collect all required drawing files without consolidating all equipment, building or item drawings into a separate area.
			</p>
			<img class="img-thumbnail" src="~/Assets/Solutions_automation.svg"/>
		</div>
	</div>
</div>

@{
	// Snipitest Strings
	string roleCSHTML = "@if (User.IsInRole(ConstData.Role_Admin_Name))\r\n{\r\n	<a asp-action='Invitation'>Send an invitation</a>\r\n}";
	string role1Csharp = "[Authorize(Roles = ConstData.Role_Admin_Name)]\r\npublic IActionResult Invitation()\r\n{\r\n	return View();\r\n}";
	string role2Csharp = "var user = await _userManager.GetUserAsync(User);\r\nawait _userManager.AddToRoleAsync(user, ConstData.Role_Admin_Name);" +
	"\r\nawait _context.SaveChangesAsync();\r\nawait _signInManager.RefreshSignInAsync(user);";
	string role3Csharp = "public static class ConstData\r\n{\r\n	public const string Role_Admin_Name = 'Administrator';\r\n	public const string Role_Engr_Name = 'Engineer';" +
	"\r\n	public const string Role_Mech_Name = 'Mechanic';\r\n	public const string Role_Spect_Name = 'Spectator';\r\n	public const string Role_Norml_Name = 'NormalUser';\r\n}";
	string role4Csharp = "// Restrict from sending invitations to built in app accounts\r\nif (registerUser!.NormalizedEmail == 'Spectator@mail.com'.ToUpper())\r\n{\r\n" +
	"	ModelState.AddModelError('SpectatorRegister',\r\n		'This user is in spectator drawing register. You cant join spectators register');\r\n}";
}

<div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasCard4" aria-labelledby="offcanvasCard4Label" style="width:100vw">
	<div class="offcanvas-header">
		<h5 class="offcanvas-title text-primary" id="offcanvasCard4Label">ReadMe</h5>
		<button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
	</div>
	<div class="offcanvas-body container">
		<h5 id="top" class="offcanvas-title text-primary mb-3">Table of Content</h5>
		<div class="list-group mb-3">
			<a href="#register" class="list-group-item list-group-item-action text-primary">Drawing register - relevant idea?</a>
			<a href="#roles" class="list-group-item list-group-item-action text-primary">Roles</a>
			<a href="#fileUpload" class="list-group-item list-group-item-action text-primary">Files upload and accessibility</a>
			<a href="#projects" class="list-group-item list-group-item-action text-primary">Project feature</a>
		</div>
		<p class="text-secondary">Source Code: <a href="https://github.com/KarolisRakauskas/DrawingRegisterMVC">https://github.com/KarolisRakauskas/DrawingRegisterMVC</a></p>
		<hr />
		<div id="register" class="mt-3">
			<h5 class="offcanvas-title text-primary">Drawing register - relevant idea?</h5>
			<p class="text-secondary">
				&emsp;Do industrial companies need an app like this? The answer should be yes and no. The idea of storing all 
				your drawings on the web seems exciting and frightening. From my 10 years of experience as a design engineer, 
				<strong>I could highly suggest using some king of drawing register</strong>. Working with drawing files scattered in 
				your business server is a very bad idea. Nobody knows where the most recent drawing revision is or where the 
				drawings are at all. Usually, engineers try to store files in their own pattern and according to their own habits, 
				and that's what confuses the whole company.
			</p>
		</div>
		<div id="roles" class="mt-3">
			<h5 class="offcanvas-title text-primary">Roles</h5>
			<hr />
			<p class="text-secondary">
				&emsp;Drawing register relies on Identity Roles. Just simple implementation drew me in.<br /> 
				From razor pages was easy to toggle features for different users on the same page:
			</p>
			<pre><label>CSHTML</label><code>@roleCSHTML</code></pre>
			<p class="text-secondary">
				&emsp;Also intuitive about controllers:
			</p>
			<pre><label>C#</label><code>@role1Csharp</code></pre>
			<p class="text-secondary">
				&emsp;That was a time-saving decision...<br />&emsp;But never less I over did it by changing roles on creating, 
				deleting and leaving register and by allowing the admin to change roles of other users. This complicity has created 
				a bug, which users must log out and log in again to update claims.
			</p>
			<p class="text-secondary">
				&emsp;I was forced to update the user connection more than once. I don't know if this is a good 
				practice for production, but it's working smoothly so far:
			</p>
			<pre><label>C#</label><code>@role2Csharp</code></pre>

			<div class="row">
				<p class="text-secondary col">
					&emsp;The register has three principal roles: <strong>administrator, engineer and mechanic</strong>.
				</p>
				<div class="col my-auto text-end">
					<img style="height:2em" src="~/Assets/owner.png" />
					<img style="height:2em" src="~/Assets/engineer.png" />
					<img style="height:2em" src="~/Assets/mechanic.png" />
				</div>
			</div>

			<div class="row">
				<p class="text-secondary col">
					&emsp;As this is a good example to avoid forcing registration, I added to the spectator account 'feature'. Since users 
					can change the password or delete their own account, I created two more roles to prevent users from messing up spectator account: 
					<strong>Spectator and NormalUser</strong>.
				</p>
				<div class="col my-auto text-end">
					<img style="height:2em" src="~/Assets/spectator.png" />
					<img style="height:2em" src="~/Assets/user.png" />
				</div>
			</div>
			<pre><label>C#</label><code>@role3Csharp</code></pre>
			<p class="text-secondary col">
				&emsp;The regular NormalUser role is assigned to everyone during registration, with the exception of the Spectator user.
			</p>
			<p class="text-secondary">
				&emsp;The Spectator 'feature' made me add more validations like this:
			</p>
			<pre><label>C#</label><code>@role4Csharp</code></pre>
			<div class="mt-2 mb-2 text-end">
				<a href="#top" class="text-primary">(back to top)</a>
			</div>
		</div>
		<div id="fileUpload" class="mt-3">
			<h5 class="offcanvas-title text-primary">Files upload and accessibility</h5>
			<hr />


			<div class="mt-2 mb-2 text-end">
				<a href="#top" class="text-primary">(back to top)</a>
			</div>
		</div>
	</div>
</div>




@section Scripts{
	<script src="~/js/home.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.4.0/highlight.min.js"></script>
	<script>hljs.highlightAll();</script>
}