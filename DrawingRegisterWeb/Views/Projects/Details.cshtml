@model DrawingRegisterWeb.ViewModels.ProjectVM

@{
	ViewData["Title"] = "Project Details";
}

<h1 class="text-primary">Details</h1>
<h4>Project</h4>
<hr />

<div>
	<dl class="row">
		<dt class = "col-sm-2">
			@Html.DisplayNameFor(model => model.Project!.ProjectNubmer)
		</dt>
		<dd class = "col-sm-10">
			@Html.DisplayFor(model => model.Project!.ProjectNubmer)
		</dd>
		<dt class = "col-sm-2">
			@Html.DisplayNameFor(model => model.Project!.Name)
		</dt>
		<dd class = "col-sm-10">
			@Html.DisplayFor(model => model.Project!.Name)
		</dd>
		<dt class = "col-sm-2">
			@Html.DisplayNameFor(model => model.Project!.Description)
		</dt>
		<dd class = "col-sm-10">
			@Html.DisplayFor(model => model.Project!.Description)
		</dd>
		<dt class = "col-sm-2">
			@Html.DisplayNameFor(model => model.Project!.CreateDate)
		</dt>
		<dd class = "col-sm-10">
			@Html.DisplayFor(model => model.Project!.CreateDate)
		</dd>
		<dt class = "col-sm-2">
			@Html.DisplayNameFor(model => model.Project!.DeadlineDate)
		</dt>
		<dd class = "col-sm-10">
			@Html.DisplayFor(model => model.Project!.DeadlineDate)
		</dd>
		<dt class = "col-sm-2">
			@Html.DisplayNameFor(model => model.Project!.ProjectState)
		</dt>
		<dd class = "col-sm-10">
			@Html.DisplayFor(model => model.Project!.ProjectState!.Name)
		</dd>
	</dl>

	<div class="btn-group" role="group">
		<a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
		@if (User.IsInRole(ConstData.Role_Admin_Name))
		{
			<a asp-action="Edit" asp-route-id="@Model.Project!.Id" class="btn btn-outline-primary">Edit</a>
			<a asp-action="Delete" asp-route-id="@Model.Project!.Id" class="btn btn-outline-danger">Delete</a>
		}
		else if (User.IsInRole(ConstData.Role_Engr_Name) &&
				Model.Project!.ProjectState!.Name != ConstData.State_Completed &&
				Model.Project!.ProjectState!.Name != ConstData.State_Canceled)
		{
			<a asp-action="Edit" asp-route-id="@Model.Project!.Id" class="btn btn-outline-primary">Edit</a>
		}
	</div>
</div>

<hr />

<ul class="nav nav-tabs" role="tablist">
  <li class="nav-item" role="presentation">
	<a class="nav-link active" data-bs-toggle="tab" href="#drawings" data-target="#drawings" aria-selected="true" role="tab">Drawings</a>
  </li>
  <li class="nav-item" role="presentation">
	<a class="nav-link" data-bs-toggle="tab" href="#documentations" data-target="#documentations" aria-selected="false" role="tab" tabindex="-1">Documentations</a>
  </li>
  <li class="nav-item" role="presentation">
	<a class="nav-link" data-bs-toggle="tab" href="#layouts" data-target="#layouts" aria-selected="false" role="tab" tabindex="-1">Layouts</a>
  </li>
</ul>

<div id="myTabContent" class="tab-content">

	<div class="tab-pane fade active show" id="drawings" role="tabpanel">
	
		@if (User.IsInRole(ConstData.Role_Admin_Name))
		{
			@using (Html.BeginForm("Create", "Drawings"))
			{
			   <input type="text" name="projectId" value="@Model.Project!.Id" hidden/>
			   <button type="submit" formmethod="get" class="btn btn-primary mt-3 mb-3">Create New Drawing</button >
			}
		}
		else if (User.IsInRole(ConstData.Role_Engr_Name) && 
		Model.Project!.ProjectState!.Name != ConstData.State_Completed && 
		Model.Project!.ProjectState!.Name != ConstData.State_Canceled)
		{
			@using (Html.BeginForm("Create", "Drawings"))
			{
			   <input name="projectId" value="@Model.Project!.Id" hidden/>
			   <button type="submit" formmethod="get" class="btn btn-primary mt-3 mb-3">Create New Drawing</button >
			}
		}

		<div class="table-responsive mt-3">
			<table class="table table-striped" id="sortTable" style="vertical-align: middle">
				<thead>
					<tr class="user-select-none">
						<th onclick="sortTable(0)">
							@Html.DisplayNameFor(model => model.Drawings![0].DrawingNumber)
							<i class="sortIcon bi"></i>
						</th>
						<th onclick="sortTable(1)">
							@Html.DisplayNameFor(model => model.Drawings![0].Name)
							<i class="sortIcon bi"></i>
						</th>
						<th onclick="sortTable(2)">
							@Html.DisplayNameFor(model => model.Drawings![0].Description)
							<i class="sortIcon bi"></i>
						</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
						@foreach (var item in Model.Drawings!)
						{
							<tr>
								<td>
									@item.DrawingNumber
								</td>
								<td>
									@item.Name
								</td>
								<td>
									@item.Description
								</td>
								<td>
									<a asp-controller="Drawings" asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-primary"> 
										<i class="bi bi-folder2-open"></i> Open
									</a>
								</td>
							</tr>
						}
				</tbody>
			</table>
		</div>
	</div>

	<div class="tab-pane fade" id="documentations" role="tabpanel">
		
		@if (User.IsInRole(ConstData.Role_Admin_Name))
		{
			<form asp-controller="Documentations" asp-action="Create" method="post" enctype="multipart/form-data" class="row mt-3 mb-3">
			   <div class="col-8">
					<input type="text" name="projectId" value="@Model.Project!.Id" hidden/>
					<input id="inputDocumentationFile" type="file" name="files" class="form-control" multiple/>
			   </div> 
			   <button id="submitDocumentationFile" type="submit" class="btn btn-primary col-4">Upload</button >
			</form>
		}
		else if (User.IsInRole(ConstData.Role_Engr_Name) && 
				Model.Project!.ProjectState!.Name != ConstData.State_Completed && 
				Model.Project!.ProjectState!.Name != ConstData.State_Canceled)
		{
			<form asp-controller="Documentations" asp-action="Create" method="post" enctype="multipart/form-data" class="row mt-3 mb-3">
			   <div class="col-8">
					<input type="text" name="projectId" value="@Model.Project!.Id" hidden/>
					<input id="inputDocumentationFile" type="file" name="files" class="form-control" multiple/>
			   </div> 
			   <button id="submitDocumentationFile" type="submit" class="btn btn-primary col-4">Upload</button >
			</form>
		}

		<div class="table-responsive mt-3">
			<table class="table table-striped" id="sortTableDoc" style="vertical-align: middle">
				<thead>
					<tr class="user-select-none">
						<th onclick="sortTableDoc(0)">
								@Html.DisplayNameFor(model => model.Documentations![0].FileName)
								<i class="sortIcon bi"></i>
						</th>
						<th onclick="sortTableDoc(1)">
								@Html.DisplayNameFor(model => model.Documentations![0].FileType)
								<i class="sortIcon bi"></i>
						</th>
						<th onclick="sortTableDoc(2)">
								@Html.DisplayNameFor(model => model.Documentations![0].Revision)
								<i class="sortIcon bi"></i>
						</th>
						<th onclick="sortTableDoc(3)">
								@Html.DisplayNameFor(model => model.Documentations![0].CreateDate)
								<i class="sortIcon bi"></i>
						</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@foreach (var item in Model.Documentations!)
					{
						int docFileUrlendIndex = item.FileUrl.LastIndexOf(".");
						string docThumbanilUrl = item.FileUrl.Substring(0, docFileUrlendIndex);
						docThumbanilUrl += ".jpg";

						<tr>
							<td>
								@item.FileName
							</td>
							<td>
								@item.FileType
							</td>
							<td>
								@item.Revision
							</td>
							<td>
								@item.CreateDate.ToString("yyyy/MM/dd")
							</td>
							<td>
								<div class="btn btn-group">							
									@if (item.FileType == "pdf")
									{
										<a	href="@item.FileUrl"
											target="_blank"
											class="btn btn-outline-primary btn-lg p-0 overflow-hidden"
											data-bs-toggle="tooltip" 
											data-bs-placement="bottom" 
											data-bs-original-title="Open" 
											aria-describedby="tooltip716761"> 
												<img src="@docThumbanilUrl" 
													alt="Thumbanil" 
													width="48" 
													height="48" 
													style="vertical-align:middle"/>
										</a>
									}
									<a	href="@item.FileUrl"
										class="btn btn-outline-primary btn-lg"
										data-bs-toggle="tooltip" 
										data-bs-placement="bottom" 
										data-bs-original-title="Download" 
										aria-describedby="tooltip716761"
										download="@item.FileName.@item.FileType"> 
											<i class="bi bi-cloud-download"></i>
									</a>

									@if (User.IsInRole(ConstData.Role_Admin_Name))
									{
										<a asp-controller="Documentations" asp-action="Edit" asp-route-id="@item.Id"
											class="btn btn-outline-primary btn-lg"
											data-bs-toggle="tooltip" 
											data-bs-placement="bottom" 
											data-bs-original-title="Edit" 
											aria-describedby="tooltip716761"> 
												<i class="bi bi-pencil-square"></i>
										</a>
										<a asp-controller="Documentations" asp-action="Delete" asp-route-id="@item.Id"
											class="btn btn-outline-danger btn-lg"
											data-bs-toggle="tooltip" 
											data-bs-placement="bottom" 
											data-bs-original-title="Delete" 
											aria-describedby="tooltip716761"> 
												<i class="bi bi-trash"></i>
										</a>
									}
									else if (User.IsInRole(ConstData.Role_Engr_Name) &&
											Model.Project!.ProjectState!.Name != ConstData.State_Completed &&
											Model.Project!.ProjectState!.Name != ConstData.State_Canceled)
									{
										<a asp-controller="Documentations" asp-action="Edit" asp-route-id="@item.Id"
											class="btn btn-outline-primary btn-lg"
											data-bs-toggle="tooltip" 
											data-bs-placement="bottom" 
											data-bs-original-title="Edit" 
											aria-describedby="tooltip716761"> 
												<i class="bi bi-pencil-square"></i>
										</a>
										<a asp-controller="Documentations" asp-action="Delete" asp-route-id="@item.Id"
											class="btn btn-outline-danger btn-lg"
											data-bs-toggle="tooltip" 
											data-bs-placement="bottom" 
											data-bs-original-title="Delete" 
											aria-describedby="tooltip716761"> 
												<i class="bi bi-trash"></i>
										</a>
									}
								</div>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
  </div>

	<div class="tab-pane fade" id="layouts" role="tabpanel">

		@if (User.IsInRole(ConstData.Role_Admin_Name))
		{
			<form asp-controller="Layouts" asp-action="Create" method="post" enctype="multipart/form-data" class="row mt-3 mb-3">
			   <div class="col-8">
					<input type="text" name="projectId" value="@Model.Project!.Id" hidden/>
					<input id="inputLayoutFile" type="file" name="files" class="form-control" multiple/>
			   </div> 
			   <button id="submitLayoutFile" type="submit" class="btn btn-primary col-4">Upload</button >
			</form>
		}
		else if (User.IsInRole(ConstData.Role_Engr_Name) &&
				Model.Project!.ProjectState!.Name != ConstData.State_Completed &&
				Model.Project!.ProjectState!.Name != ConstData.State_Canceled)
		{
			<form asp-controller="Layouts" asp-action="Create" method="post" enctype="multipart/form-data" class="row mt-3 mb-3">
			   <div class="col-8">
					<input type="text" name="projectId" value="@Model.Project!.Id" hidden/>
					<input id="inputLayoutFile" type="file" name="files" class="form-control" multiple/>
			   </div> 
			   <button id="submitLayoutFile" type="submit" class="btn btn-primary col-4">Upload</button >
			</form>
		}

		<div class="table-responsive mt-3">
			<table class="table table-striped" id="sortTableLay" style="vertical-align: middle">
				<thead>
					<tr class="user-select-none">
						<th onclick="sortTableLay(0)">
								@Html.DisplayNameFor(model => model.Layouts![0].FileName)
								<i class="sortIcon bi"></i>
						</th>
						<th onclick="sortTableLay(1)">
								@Html.DisplayNameFor(model => model.Layouts![0].FileType)
								<i class="sortIcon bi"></i>
						</th>
						<th onclick="sortTableLay(2)">
								@Html.DisplayNameFor(model => model.Layouts![0].Revision)
								<i class="sortIcon bi"></i>
						</th>
						<th onclick="sortTableLay(3)">
								@Html.DisplayNameFor(model => model.Layouts![0].CreateDate)
								<i class="sortIcon bi"></i>
						</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@foreach (var item in Model.Layouts!)
					{
						int layFileUrlendIndex = item.FileUrl.LastIndexOf(".");
						string layThumbanilUrl = item.FileUrl.Substring(0, layFileUrlendIndex);
						layThumbanilUrl += ".jpg";

						<tr>
							<td>
							@item.FileName
							</td>
							<td>
							@item.FileType
							</td>
							<td>
							@item.Revision
							</td>
							<td>
							@item.CreateDate.ToString("yyyy/MM/dd")
							</td>
							<td>
								<div class="btn btn-group">							
									@if (item.FileType == "pdf")
									{
										<a	href="@item.FileUrl"
										target="_blank"
										class="btn btn-outline-primary btn-lg p-0 overflow-hidden"
										data-bs-toggle="tooltip" 
										data-bs-placement="bottom" 
										data-bs-original-title="Open" 
										aria-describedby="tooltip716761"> 
												<img src="@layThumbanilUrl" 
													alt="Thumbanil" 
													width="48" 
													height="48" 
													style="vertical-align:middle"/>
										</a>
									}
									<a	href="@item.FileUrl"
									class="btn btn-outline-primary btn-lg"
									data-bs-toggle="tooltip" 
									data-bs-placement="bottom" 
									data-bs-original-title="Download" 
									aria-describedby="tooltip716761"
									download="@item.FileName.@item.FileType"> 
											<i class="bi bi-cloud-download"></i>
									</a>

									@if (User.IsInRole(ConstData.Role_Admin_Name))
									{
										<a asp-controller="Layouts" asp-action="Edit" asp-route-id="@item.Id"
											class="btn btn-outline-primary btn-lg"
											data-bs-toggle="tooltip" 
											data-bs-placement="bottom" 
											data-bs-original-title="Edit" 
											aria-describedby="tooltip716761"> 
												<i class="bi bi-pencil-square"></i>
										</a>
										<a asp-controller="Layouts" asp-action="Delete" asp-route-id="@item.Id"
											class="btn btn-outline-danger btn-lg"
											data-bs-toggle="tooltip" 
											data-bs-placement="bottom" 
											data-bs-original-title="Delete" 
											aria-describedby="tooltip716761"> 
												<i class="bi bi-trash"></i>
										</a>
									}
									else if (User.IsInRole(ConstData.Role_Engr_Name) &&
											Model.Project!.ProjectState!.Name != ConstData.State_Completed &&
											Model.Project!.ProjectState!.Name != ConstData.State_Canceled)
									{
										<a asp-controller="Layouts" asp-action="Edit" asp-route-id="@item.Id"
											class="btn btn-outline-primary btn-lg"
											data-bs-toggle="tooltip" 
											data-bs-placement="bottom" 
											data-bs-original-title="Edit" 
											aria-describedby="tooltip716761"> 
												<i class="bi bi-pencil-square"></i>
										</a>
										<a asp-controller="Layouts" asp-action="Delete" asp-route-id="@item.Id"
											class="btn btn-outline-danger btn-lg"
											data-bs-toggle="tooltip" 
											data-bs-placement="bottom" 
											data-bs-original-title="Delete" 
											aria-describedby="tooltip716761"> 
												<i class="bi bi-trash"></i>
										</a>
									}
								</div>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>

</div>

@section Scripts
{
	<script>
		//Disable and enebable documentation file upload box submit button
		const submitDocumentation = document.getElementById('submitDocumentationFile');
		const documentationFile = document.getElementById('inputDocumentationFile');

		submitDocumentation.disabled = true;
		documentationFile.addEventListener("change", function(){
			if (documentationFile.value == "") {
				submitDocumentation.disabled = true;
			}
			else {
				submitDocumentation.disabled = false;
			}
		});

		//Disable and enebable Layout file upload box submit button
		const submitLayout = document.getElementById('submitLayoutFile');
		const layoutFile = document.getElementById('inputLayoutFile');

		submitLayout.disabled = true;
		layoutFile.addEventListener("change", function(){
			if (layoutFile.value == "") {
				submitLayout.disabled = true;
			}
			else {
				submitLayout.disabled = false;
			}
		});

		//Save Last Opened nav-tab in Session Storage
		$(function() { 
			$('.nav-tabs a').on('show.bs.tab', function () {
				sessionStorage.setItem('lastTab', $(this).attr('href'));
			});
			var lastTab = sessionStorage.getItem('lastTab');
			if (lastTab) {
				$('[href="' + lastTab + '"]').tab('show');
			}
		});
	</script>
}