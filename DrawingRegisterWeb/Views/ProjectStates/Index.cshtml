@model IEnumerable<ProjectState>

@{
	ViewData["Title"] = "Project State";
}

<h1>Project State</h1>

<div class="alert alert-dismissible alert-warning">
  <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  <h4 class="alert-heading">Warning!</h4>
  <p class="mb-0">
	  Custom project states have no built-in functions such as limiting accessibility to team members. 
	  Custom project state will have the same functionality as a running project state. In all project 
	  statuses, the administrator will always have complete access to create, read, update and delete 
	  functions.
  </p>
</div>

<p>
	<a asp-action="Create" class="btn btn-primary">Create New Custom State</a>
</p>

<table class="table table-hover">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Name)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Description)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
@foreach (var item in Model) {
		<tr>
			<td>
				@item.Name
			</td>
			<td>
				@item.Description
			</td>
			<td>
					@if (item.Name == "Defined" ||
							item.Name == "Running" ||
							item.Name == "Suspended" ||
							item.Name == "Canceled" ||
							item.Name == "Completed")
					{
						<div class="btn-group" role="group">
						<a 
							asp-action="Edit" 
							asp-route-id="@item.Id" 
							style="pointer-events: none;"
							class="btn btn-primary disabled">Edit</a>
						<a 
							asp-action="Delete" 
							asp-route-id="@item.Id" 
							style="pointer-events: none;"
							class="btn btn-warning disabled">Delete</a>
						</div>
					}
					else
					{
						<div class="btn-group" role="group">
						<a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edit</a>
						<a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-warning">Delete</a>
						</div>
					}
			</td>
		</tr>
}
	</tbody>
</table>